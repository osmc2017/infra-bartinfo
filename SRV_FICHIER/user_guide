# User Guide : Configuration Automatisée des Dossiers pour les Utilisateurs et Groupes Active Directory

Ce guide explique comment configurer un serveur de fichiers Windows Server pour créer des dossiers :
- Un dossier personnel pour chaque utilisateur avec un accès exclusif.
- Un dossier partagé pour chaque groupe avec un accès réservé aux membres du groupe.

Le guide inclut deux scripts PowerShell pour automatiser ces tâches.

---

## **Prérequis**

1. Un serveur Windows Server configuré et joint à un domaine Active Directory.
2. Le module PowerShell Active Directory installé sur le serveur.
   - Si ce n’est pas encore fait, installez-le avec :
     ```powershell
     Install-WindowsFeature RSAT-AD-PowerShell
     ```
3. Les utilisateurs et groupes doivent déjà exister dans Active Directory.
4. Un accès administrateur sur le serveur.

---

## **Étape 1 : Préparer les Dossiers Racines**

Avant d’exécuter les scripts, préparez les dossiers racines où les sous-dossiers des utilisateurs et des groupes seront créés.

1. Connectez-vous au serveur de fichiers.
2. Créez les dossiers racines suivants ou choisissez leurs emplacements :
   - Pour les utilisateurs : `D:\Partage\Utilisateurs`
   - Pour les groupes : `D:\Partage\Groupes`

3. Assurez-vous que le serveur dispose de suffisamment d’espace disque pour accueillir tous les dossiers.

---

## **Étape 2 : Script PowerShell pour les Dossiers Utilisateurs**

### **Description**
Ce script crée un dossier pour chaque utilisateur dans le domaine Active Directory et configure les permissions NTFS pour que seul l’utilisateur concerné ait accès.

### **Script**

Enregistrez ce script dans un fichier, par exemple `User_Folders.ps1` :

```powershell
# Variables
$racinePartageUtilisateurs = "D:\Partage\Utilisateurs"  # Chemin de stockage des dossiers des utilisateurs
$domainUsersGroup = "Domain Users"  # Groupe contenant les utilisateurs (par défaut dans AD)

# Importer le module Active Directory
Import-Module ActiveDirectory

# Créer le dossier racine des utilisateurs s'il n'existe pas
if (!(Test-Path -Path $racinePartageUtilisateurs)) {
    New-Item -ItemType Directory -Path $racinePartageUtilisateurs
}

# Récupérer tous les utilisateurs du domaine
$utilisateurs = Get-ADUser -Filter * -SearchBase "CN=Users,DC=bartinfo,DC=com" -Properties SamAccountName

foreach ($utilisateur in $utilisateurs) {
    $userFolder = Join-Path -Path $racinePartageUtilisateurs -ChildPath $utilisateur.SamAccountName
    
    # Vérifier si le dossier existe déjà
    if (!(Test-Path -Path $userFolder)) {
        New-Item -ItemType Directory -Path $userFolder
        Write-Host "Dossier créé pour l'utilisateur : $($utilisateur.SamAccountName)"
    }

    # Configurer les permissions NTFS
    $acl = Get-Acl -Path $userFolder
    $acl.SetAccessRule((New-Object System.Security.AccessControl.FileSystemAccessRule("$($utilisateur.SamAccountName)", "FullControl", "ContainerInherit,ObjectInherit", "None", "Allow")))
    Set-Acl -Path $userFolder -AclObject $acl
    Write-Host "Permissions configurées pour l'utilisateur : $($utilisateur.SamAccountName)"
}

Write-Host "Création des dossiers utilisateurs terminée."
```

### **Exécution du Script**

1. Enregistrez le script dans un fichier, par exemple : `C:\Scripts\User_Folders.ps1`.
2. Ouvrez PowerShell en tant qu’administrateur.
3. Activez l’exécution des scripts :
   ```powershell
   Set-ExecutionPolicy RemoteSigned -Scope Process
   ```
4. Exécutez le script :
   ```powershell
   .\C:\Scripts\User_Folders.ps1
   ```

### **Résultat Attendu**
- Un dossier est créé pour chaque utilisateur dans `D:\Partage\Utilisateurs`.
- Chaque dossier est accessible uniquement par l’utilisateur correspondant et les administrateurs.

---

## **Étape 3 : Script PowerShell pour les Dossiers Groupes**

### **Description**
Ce script crée un dossier pour chaque groupe Active Directory et configure les permissions NTFS pour que seuls les membres du groupe aient accès.

### **Script**

Enregistrez ce script dans un fichier, par exemple `Group_Folders.ps1` :

```powershell
# Variables
$racinePartageGroupes = "D:\Partage\Groupes"  # Chemin de stockage des dossiers des groupes

# Importer le module Active Directory
Import-Module ActiveDirectory

# Créer le dossier racine des groupes s'il n'existe pas
if (!(Test-Path -Path $racinePartageGroupes)) { 
    New-Item -ItemType Directory -Path $racinePartageGroupes 
}

# Récupérer tous les groupes AD
$groupes = Get-ADGroup -Filter * -Properties SamAccountName

foreach ($groupe in $groupes) {
    $groupFolder = Join-Path -Path $racinePartageGroupes -ChildPath $groupe.SamAccountName
    
    # Vérifier si le dossier existe déjà
    if (!(Test-Path -Path $groupFolder)) {
        New-Item -ItemType Directory -Path $groupFolder
        Write-Host "Dossier créé pour le groupe : $($groupe.SamAccountName)"
    }

    # Configurer les permissions NTFS
    $acl = Get-Acl -Path $groupFolder
    $acl.SetAccessRule((New-Object System.Security.AccessControl.FileSystemAccessRule("$($groupe.SamAccountName)", "FullControl", "ContainerInherit,ObjectInherit", "None", "Allow")))
    Set-Acl -Path $groupFolder -AclObject $acl
    Write-Host "Permissions configurées pour le groupe : $($groupe.SamAccountName)"
}

Write-Host "Création des dossiers groupes terminée."
```

### **Exécution du Script**

1. Enregistrez le script dans un fichier, par exemple : `C:\Scripts\Group_Folders.ps1`.
2. Ouvrez PowerShell en tant qu’administrateur.
3. Activez l’exécution des scripts :
   ```powershell
   Set-ExecutionPolicy RemoteSigned -Scope Process
   ```
4. Exécutez le script :
   ```powershell
   .\C:\Scripts\Group_Folders.ps1
   ```

### **Résultat Attendu**
- Un dossier est créé pour chaque groupe dans `D:\Partage\Groupes`.
- Chaque dossier est accessible uniquement par les membres du groupe correspondant et les administrateurs.

---

## **Étape 4 : Validation des Résultats**

1. Connectez-vous avec un utilisateur du domaine.
2. Accédez au dossier partagé :
   ```plaintext
   \\ServeurDeFichiers\Partage\Utilisateurs
   \\ServeurDeFichiers\Partage\Groupes
   ```
3. Vérifiez :
   - Chaque utilisateur doit accéder uniquement à son dossier personnel.
   - Les membres d’un groupe doivent accéder uniquement au dossier correspondant.

---

## **Personnalisation Supplémentaire**

- Vous pouvez modifier les chemins racines des dossiers en ajustant les variables `$racinePartageUtilisateurs` et `$racinePartageGroupes`.
- Si vos utilisateurs ou groupes se trouvent dans des conteneurs spécifiques, ajustez les paramètres `SearchBase` pour les scripts.

---

Avec ces scripts et ces étapes, vous pouvez configurer un serveur de fichiers qui gère automatiquement les permissions d'accès pour les utilisateurs et les groupes Active Directory.
